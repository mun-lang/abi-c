#ifndef MUN_ABI_H_
#define MUN_ABI_H_

#include <stdint.h>

/**
 * Represents a globally unique identifier (GUID).
 *
 * GUIDs are generated by taking the MD5 hash of a type's name.
 *
 * <div rustbindgen derive="Clone" derive="Copy" derive="Debug" derive="PartialEq"></div>
 */
typedef struct
{
    /// 16-byte MD5 hash
    const uint8_t b[16];
} MunGuid;

/**
 * Represents the type declaration for a value type.
 *
 * TODO: add support for structs, polymorphism, enumerations, type parameters, generic type definitions, and constructed generic types.
 * 
 * <div rustbindgen derive="Debug"></div>
 */
typedef struct
{
    /// Type GUID
    const MunGuid guid;
    /// Type name
    const char *name;
} MunTypeInfo;

/*
 * Represents the accessibility level of a function, module, or type.
 */
typedef enum
{
    /// Publicly (and privately) accessible
    MunPrivacyPublic = 0,
    /// Privately accessible
    MunPrivacyPrivate = 1
} MunPrivacy;

typedef uint8_t MunPrivacy_t;

/**
 * Represents a function signature.
 * 
 * <div rustbindgen derive="Clone" derive="Debug"></div>
 */
typedef struct
{
    /// Function name
    const char *name;
    /// Argument types
    const MunTypeInfo *arg_types;
    /// Optional return type
    const MunTypeInfo *return_type;
    /// Number of argument types
    const uint16_t num_arg_types;
    /// Function accessibility level
    const MunPrivacy_t privacy;
} MunFunctionSignature;

/**
 * Represents a function declaration.
 *
 * `fn_ptr` can be used to call the declared function.
 *
 * <div rustbindgen derive="Clone" derive="Debug"></div>
 */
typedef struct
{
    /// Function signature
    const MunFunctionSignature signature;
    /// Function pointer
    const void *fn_ptr;
} MunFunctionInfo;

/**
 * Represents a module declaration.
 * 
 * <div rustbindgen derive="Debug"></div>
 */
typedef struct
{
    /// Module path
    const char *path;
    /// Module functions
    const MunFunctionInfo *functions;
    /// Number of module functions
    const uint32_t num_functions;
} MunModuleInfo;

/**
 * Represents a function dispatch table. This is used for runtime linking.
 *
 * Function signatures and pointers are stored separately for cache efficiency.
 *
 * <div rustbindgen derive="Debug"></div>
 */
typedef struct
{
    /// Function signatures
    const MunFunctionSignature *signatures;
    /// Function pointers
    const void **fn_ptrs;
    /// Number of functions
    const uint32_t num_entries;
} MunDispatchTable;

/**
 * Represents an assembly declaration.
 * 
 * <div rustbindgen derive="Debug"></div>
 */
typedef struct
{
    /// Symbols of the top-level module
    const MunModuleInfo symbols;
    /// Dispatch table
    MunDispatchTable dispatch_table;
    /// Paths to assembly dependencies
    const char *const *dependencies;
    /// Number of dependencies
    const uint32_t num_dependencies;
} MunAssemblyInfo;

#endif
